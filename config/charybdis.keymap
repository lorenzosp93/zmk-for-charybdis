#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <180>;
    flavor = "balanced";
    quick-tap-ms = <120>;
};

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick-tap-ms = <120>;
            require-prior-idle-ms = <100>;
            flavor = "balanced";
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 30 31 32>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick-tap-ms = <120>;
            require-prior-idle-ms = <100>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32 33 34>;
        };

        hmls: hmls {
            compatible = "zmk,behavior-hold-tap";
            label = "HMLS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <120>;
            flavor = "balanced";
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 30 31 32>;
            hold-trigger-on-release;
        };

        hmrs: hmrs {
            compatible = "zmk,behavior-hold-tap";
            label = "HMRS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <120>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32 33 34>;
        };

        bs_del: bs_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Grave {
            bindings = <&kp GRAVE>;
            key-positions = <20 21>;
            layers = <0 1>;
        };

        Minus {
            bindings = <&kp MINUS>;
            key-positions = <28 29>;
            layers = <0 1>;
        };

        Semicolon {
            bindings = <&kp SEMI>;
            key-positions = <18 19>;
            require-prior-idle-ms = <120>;
            layers = <0 1>;
            timeout-ms = <30>;
        };

        Tab {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
            require-prior-idle-ms = <120>;
            timeout-ms = <30>;
        };

        LBracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <8 9>;
            layers = <0 1>;
            require-prior-idle-ms = <120>;
        };

        Esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
            require-prior-idle-ms = <120>;
        };

        Backslash {
            bindings = <&kp BSLH>;
            key-positions = <28 29>;
            layers = <2>;
        };

        RBracket {
            bindings = <&kp RBKT>;
            key-positions = <8 9>;
            layers = <2>;
            require-prior-idle-ms = <120>;
        };

        CapsWord {
            bindings = <&caps_word>;
            key-positions = <20 21>;
            layers = <2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty {
            bindings = <
&kp Q         &kp W        &kp E        &kp R          &kp T        &kp Y         &kp U                       &kp I        &kp O        &kp P
&hml LCTRL A  &hml LALT S  &hml LGUI D  &hmls LSHFT F  &kp G        &kp H         &hmrs RSHFT J               &hmr RGUI K  &hmr RALT L  &hmr RCTRL SINGLE_QUOTE
&lt 4 Z       &kp X        &kp C        &kp V          &kp B        &kp N         &kp M                       &kp COMMA    &kp DOT      &lt 4 SLASH
                           &bs_del      &kp SPACE      &lt 2 TAB    &lt 2 ESCAPE  &hmr LA(LC(LG(LSHFT))) RET
            >;
        };

        colemak {
            bindings = <
&kp Q         &kp W        &kp F        &kp P          &kp B        &kp J         &kp L                       &kp U        &kp Y        &kp SINGLE_QUOTE
&hml LCTRL A  &hml LALT R  &hml LGUI S  &hmls LSHFT T  &kp G        &kp M         &hmrs RSHFT N               &hmr RGUI E  &hmr RALT I  &hmr RCTRL O
&lt 4 Z       &kp X        &kp C        &kp D          &kp V        &kp K         &kp H                       &kp COMMA    &kp DOT      &lt 4 SLASH
                           &bs_del      &kp SPACE      &lt 2 TAB    &lt 2 ESCAPE  &hmr LA(LC(LG(LSHFT))) RET
            >;
        };

        lower {
            bindings = <
&kp LS(EXCL)   &kp LS(AT)    &kp LS(POUND)  &kp LS(DLLR)   &kp LS(PRCNT)       &kp LS(CARET)  &kp LS(AMPS)   &kp LS(STAR)  &kp LS(LPAR)  &kp LS(RPAR)
&hml LCTRL N1  &hml LALT N2  &hml LGUI N3   &hml LSHFT N4  &kp N5              &kp N6         &hmr RSHFT N7  &hmr RGUI N8  &hmr RALT N9  &hmr RCTRL N0
&kp LBKT       &kp LS(LBRC)  &kp LS(RBRC)   &kp RBKT       &kp SINGLE_QUOTE    &kp MINUS      &kp EQUAL      &trans        &trans        &trans
                             &trans         &trans         &lt 3 TAB           &lt 3 ESCAPE   &trans
            >;
        };

        settings {
            bindings = <
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5          &kp F6      &kp F7            &kp F8        &kp F9          &kp F10
&kp F11     &kp F12       &none         &to 1         &to 0           &bt BT_CLR  &bt BT_SEL 0      &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_SEL 3
&kp C_MUTE  &kp C_VOL_UP  &kp C_VOL_DN  &kp C_BRI_UP  &kp C_BRI_DN    &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT    &studio_unlock  &bt BT_SEL 4
                          &none         &none         &none           &none       &none
            >;
        };

        nav {
            bindings = <
&none      &none     &none     &none      &none       &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &none
&kp LCTRL  &kp LALT  &kp LGUI  &kp LSHFT  &none       &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &none
&none      &mo 5     &none     &none      &none       &none     &none          &none        &mo 5      &none
                     &mkp MB2  &mkp MB1   &mkp MB3    &mkp MB2  &mkp MB1
            >;
        };

        scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans    &trans  &trans
            >;
        };
    };
};
